{"version":3,"sources":["components/Scroll-To-Top.js","components/Bolt-Icon.js","components/Clock-Icon.js","components/Heart-Icon.js","components/Trash-Icon.js","components/User-Icon.js","components/Post-Card.js","Helpers.js","containers/Favorites.js","components/Reddit-Logo.js","containers/Header.js","containers/Main.js","App.js","serviceWorker.js","index.js"],"names":["ScrollToTop","prevProps","this","props","location","window","scrollTo","children","Component","withRouter","BoltIcon","_ref","_ref$currentColor","currentColor","react_default","a","createElement","aria-hidden","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","ClockIcon","HeartIcon","onClick","TrashIcon","UserIcon","PostCard","state","isHovering","dateString","date","Date","_this","post","relativeTime","lib_default","mmddyy","favoriteIcon","_this$props","type","isThisFavorite","isFavorite","id","Trash_Icon_TrashIcon","toggleFavorite","Heart_Icon_HeartIcon","handleMouseHover","setState","_this$props2","_this$props$post","title","image","permalink","user","ups","alt","src","href","concat","User_Icon_UserIcon","Clock_Icon_ClockIcon","Bolt_Icon_BoltIcon","makePostCard","components_Post_Card","key","pickImage","data","url","startsWith","thumbnail","getMonth","getDay","getFullYear","join","Favorites","renderPosts","Object","values","favorites","map","keys","length","RedditLogo","width","height","Header","favoritesNum","NavLink","exact","to","activeClassName","Reddit_Logo_RedditLogo","Main","posts","fetchPosts","axios","get","then","resp","created_utc","postData","author","App","postId","newFavorites","assign","objectSpread","defineProperty","main","src_containers_Main","fav","src_containers_Favorites","head","src_containers_Header","Route","path","component","Switch","Boolean","hostname","match","ReactDOM","render","BrowserRouter","basename","process","Scroll_To_Top","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.611a8ab2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\n\nexport const BoltIcon = ({ currentColor = \"#999\" }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"fas\"\n    data-icon=\"bolt\"\n    className=\"post-card-icon\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 320 512\">\n    <path\n      fill={currentColor}\n      d=\"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z\">\n    </path>\n  </svg>\n);","import React from 'react';\n\nexport const ClockIcon = ({ currentColor = \"#999\" }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"far\"\n    data-icon=\"clock\"\n    className=\"post-card-icon\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\">\n    <path\n      fill={currentColor}\n      d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\">\n    </path>\n  </svg>\n);","import React from 'react';\n\nexport const HeartIcon = ({ currentColor, className, onClick }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"fas\"\n    data-icon=\"heart\"\n    className={className ? className : \"Header-heart-icon\"}\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n    onClick={onClick ? onClick : null}\n  >\n    <path\n      fill={currentColor ? currentColor : \"white\"}\n      d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\">\n    </path>\n  </svg>\n);","import React from 'react';\n\nexport const TrashIcon = ({ currentColor, className, onClick }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"fas\"\n    data-icon=\"trash-alt\"\n    className={className ? className : \"Header-heart-icon\"}\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 448 512\"\n    onClick={onClick ? onClick : null}\n  >\n    <path\n      fill={currentColor ? currentColor : \"white\"}\n      d=\"M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm416 56v324c0 26.5-21.5 48-48 48H80c-26.5 0-48-21.5-48-48V140c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12zm-272 68c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208z\"\n    >\n    </path>\n  </svg>\n);","import React from 'react';\n\nexport const UserIcon = ({ currentColor = \"#999\" }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"fas\"\n    data-icon=\"user\"\n    className=\"post-card-icon\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 448 512\">\n    <path\n      fill={currentColor}\n      d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\">\n    </path>\n  </svg>\n);","import React, { Component } from 'react';\nimport TimeAgo from 'react-timeago';\nimport { mmddyy } from '../Helpers';\nimport { BoltIcon } from './Bolt-Icon';\nimport { ClockIcon } from './Clock-Icon';\nimport { HeartIcon } from './Heart-Icon';\nimport { TrashIcon } from './Trash-Icon';\nimport { UserIcon } from './User-Icon';\nimport './Post-Card.css';\n\nclass PostCard extends Component {\n\n  state = { isHovering: false }\n\n  dateString = () => {\n    const date = new Date(this.props.post.date * 1000)\n    const relativeTime = this.props.relativeTime\n\n    if (relativeTime) {\n      return <TimeAgo date={date} />\n    } else {\n      return mmddyy(date)\n    }\n  };\n\n  favoriteIcon = () => {\n    const { type, isFavorite } = this.props\n    const { id } = this.props.post\n    const isThisFavorite = isFavorite(id)\n    if (type === \"favorites\") {\n      return (\n        <TrashIcon\n          className=\"inactive-overlay overlay favorite-icon\"\n          currentColor=\"white\"\n          onClick={this.toggleFavorite}\n        />\n      );\n    } else {\n      return (\n        <HeartIcon\n          className={isThisFavorite ?\n            \"active-overlay overlay favorite-icon\" :\n            \"inactive-overlay overlay favorite-icon\"\n          }\n          currentColor={isThisFavorite ?\n            \"#f47a76\" :\n            \"white\"\n          }\n          onClick={this.toggleFavorite}\n        />\n      );\n    }\n  }\n\n  handleMouseHover = (state) => {\n    this.setState({\n      isHovering: !this.state.isHovering,\n    });\n  }\n\n  toggleFavorite = () => {\n    const { toggleFavorite, post } = this.props\n    toggleFavorite(post)\n  }\n\n  render() {\n    const { title, image, permalink, user, ups } = this.props.post\n    return (\n      <div className=\"post-card\">\n        <div className=\"post-image-container\">\n          <img\n            className=\"post-image\"\n            alt={title}\n            src={image}\n          >\n          </img>\n          {this.favoriteIcon()}\n        </div>\n        <a\n          className=\"post-title\"\n          href={`https://reddit.com${permalink}`}\n        >\n          {title}\n        </a>\n        <span className=\"post-data\">\n          <UserIcon />\n          <a href={`https://reddit.com${user}`}>\n            {user}\n          </a>\n          <span className=\"post-dot\">•</span>\n          <ClockIcon />\n          {this.dateString()}\n          <span className=\"post-dot\">•</span>\n          <BoltIcon />\n          {ups}\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default PostCard;","import React from 'react';\nimport PostCard from './components/Post-Card'\n\n// Construct a PostCard component with the appropriate props\nexport const makePostCard = (post, type, toggleFavorite, isFavorite) => {\n  let relativeTime = (type) => {\n    switch (type) {\n      case \"main\":\n        return true;\n      case \"favorites\":\n        return false;\n      default:\n        return true;\n    }\n  }\n  return (\n    <PostCard\n      relativeTime={relativeTime(type)}\n      key={post.id}\n      toggleFavorite={toggleFavorite}\n      isFavorite={isFavorite}\n      post={post}\n      type={type}\n    />\n  );\n}\n\n// Rough process to select optimal image url.\n// Preference: reddit source > thumbnail source > placeholder\nexport const pickImage = (data) => {\n  if (data.url.startsWith('https://i.redd.it/')) {\n    return data.url;\n  } else if (data.thumbnail && data.thumbnail !== '') {\n    return data.thumbnail;\n  } else {\n    return '/img.png';\n  }\n}\n\n// Takes JS date obj and returns string in mm/dd/yy formate\nexport const mmddyy = (date) => {\n  const mm = date.getMonth() + 1 //JS Months are indexed a 0\n  const dd = date.getDay();\n  const yyyy = date.getFullYear();\n\n  return [mm, dd, yyyy % 100].join('/');\n}","import React, { Component } from 'react';\nimport './Main.css';\nimport './Favorites.css';\nimport { makePostCard } from '../Helpers.js'\n\nclass Favorites extends Component {\n\n  renderPosts = () => {\n    const { toggleFavorite, isFavorite } = this.props;\n    const favorites = Object.values(this.props.favorites)\n    return favorites.map(post => {\n      return makePostCard(post, \"favorites\", toggleFavorite, isFavorite);\n    });\n  }\n\n  render() {\n    if (Object.keys(this.props.favorites).length < 1) {\n      return (\n        <div className=\"main\">\n          <div className=\"warning-box\">\n            <p>No favorites yet.</p>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"main\">\n        {this.renderPosts()}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\n\nexport const RedditLogo = ({ currentColor = \"#57a2e4\" }) => (\n  <svg\n    aria-hidden=\"true\"\n    data-prefix=\"fab\"\n    data-icon=\"reddit-alien\"\n    className=\"Header-reddit-logo\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      fill={currentColor}\n      d=\"M440.3 203.5c-15 0-28.2 6.2-37.9 15.9-35.7-24.7-83.8-40.6-137.1-42.3L293 52.3l88.2 19.8c0 21.6 17.6 39.2 39.2 39.2 22 0 39.7-18.1 39.7-39.7s-17.6-39.7-39.7-39.7c-15.4 0-28.7 9.3-35.3 22l-97.4-21.6c-4.9-1.3-9.7 2.2-11 7.1L246.3 177c-52.9 2.2-100.5 18.1-136.3 42.8-9.7-10.1-23.4-16.3-38.4-16.3-55.6 0-73.8 74.6-22.9 100.1-1.8 7.9-2.6 16.3-2.6 24.7 0 83.8 94.4 151.7 210.3 151.7 116.4 0 210.8-67.9 210.8-151.7 0-8.4-.9-17.2-3.1-25.1 49.9-25.6 31.5-99.7-23.8-99.7zM129.4 308.9c0-22 17.6-39.7 39.7-39.7 21.6 0 39.2 17.6 39.2 39.7 0 21.6-17.6 39.2-39.2 39.2-22 .1-39.7-17.6-39.7-39.2zm214.3 93.5c-36.4 36.4-139.1 36.4-175.5 0-4-3.5-4-9.7 0-13.7 3.5-3.5 9.7-3.5 13.2 0 27.8 28.5 120 29 149 0 3.5-3.5 9.7-3.5 13.2 0 4.1 4 4.1 10.2.1 13.7zm-.8-54.2c-21.6 0-39.2-17.6-39.2-39.2 0-22 17.6-39.7 39.2-39.7 22 0 39.7 17.6 39.7 39.7-.1 21.5-17.7 39.2-39.7 39.2z\">\n    </path>\n  </svg>\n);","import React, { Component } from 'react';\nimport { RedditLogo } from '../components/Reddit-Logo';\nimport { HeartIcon } from '../components/Heart-Icon';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const favoritesNum = this.props.favoritesNum\n    return (\n      <div className=\"Header\">\n        <NavLink exact to=\"/\" activeClassName=\"Header-active\" className=\"Header-section\">\n          <RedditLogo className=\"Header-icon\" alt=\"reddit logo\" currentColor=\"white\" />\n          <div>/r/analog</div>\n        </NavLink>\n        <NavLink to=\"/favorites\" activeClassName=\"Header-active\" className=\"Header-section\">\n          <HeartIcon className=\"Header-icon\" alt=\"heart icon\" currentColor=\"#57a2e4\" />\n          <div>favorites ({favoritesNum})</div>\n        </NavLink>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { makePostCard, pickImage } from '../Helpers.js';\nimport './Main.css';\n\nclass Main extends Component {\n  state = { posts: [] }\n\n  componentDidMount() {\n    this.fetchPosts()\n  }\n\n  fetchPosts = () => {\n    axios.get(\"https://www.reddit.com/r/analog/top.json\")\n      .then(resp => {\n        const posts = resp.data.data.children.map(post => {\n          const data = post.data\n\n          const { \n            title,\n            ups,\n            id,\n            permalink, \n            created_utc\n           } = data\n\n          let postData = {title, ups, id, permalink}\n          postData.date = created_utc\n          postData.image = pickImage(data)\n          postData.user = `/u/${data.author}`\n\n          return postData\n        });\n        this.setState({ posts });\n      });\n  }\n\n  renderPosts = () => {\n    const { toggleFavorite, isFavorite } = this.props;\n\n    return this.state.posts.map(post => {\n      return makePostCard(post, \"main\", toggleFavorite, isFavorite);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        {this.renderPosts()}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Favorites from './containers/Favorites';\nimport Header from './containers/Header';\nimport Main from './containers/Main';\nclass App extends Component {\n  state = { favorites: {} }\n\n  toggleFavorite = (post) => {\n    const postId = post.id\n    if (!this.isFavorite(postId)) {\n      this.setState({\n        favorites: { ...this.state.favorites, [postId]: post }\n      })\n    } else {\n      const newFavorites = Object.assign(this.state.favorites);\n      delete newFavorites[postId]\n      this.setState({\n        favorites: newFavorites\n      })\n    }\n  }\n\n  isFavorite = (postId) => {\n    return this.state.favorites[postId] ? true : false\n  }\n\n  main = () => {\n    return (\n      <Main\n        toggleFavorite={this.toggleFavorite}\n        isFavorite={this.isFavorite}\n      />\n    );\n  }\n\n  fav = () => {\n    return (\n      <Favorites\n        favorites={this.state.favorites}\n        toggleFavorite={this.toggleFavorite}\n        isFavorite={this.isFavorite}\n      />\n    );\n  }\n\n  head = () => {\n    return (\n      <Header\n        favoritesNum={Object.keys(this.state.favorites).length}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" component={this.head} />\n        <Switch>\n          <Route\n            exact={true}\n            path=\"/\"\n            component={this.main}\n          />\n          <Route\n            exact\n            path=\"/favorites\"\n            component={this.fav}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/Scroll-To-Top';\nimport App from './App';\nimport './index.css';\nimport 'normalize.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}